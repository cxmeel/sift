"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[553],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||l;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},57784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const l={sidebar_position:2},i=void 0,o={unversionedId:"Installation",id:"Installation",title:"Installation",description:"[sift]//github.com/csqrl/sift",source:"@site/docs/Installation.md",sourceDirName:".",slug:"/Installation",permalink:"/sift/docs/Installation",draft:!1,editUrl:"https://github.com/cxmeel/sift/edit/main/docs/Installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Sift",permalink:"/sift/docs/intro"},next:{title:"Examples",permalink:"/sift/docs/Examples"}},s={},p=[{value:"Wally",id:"wally",level:3},{value:"TypeScript",id:"typescript",level:3},{value:"Manual Installation",id:"manual-installation",level:3}],c={toc:p},u="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Sift is available from ",(0,a.kt)("a",{parentName:"p",href:"https://wally.run/package/csqrl/sift"},"Wally"),", ",(0,a.kt)("a",{parentName:"p",href:"https://csqrl.itch.io/sift"},"Itch.io"),", the ",(0,a.kt)("a",{parentName:"p",href:"https://www.roblox.com/library/9486684823"},"Roblox Library"),", and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/csqrl/sift/releases"},"GitHub releases"),"."),(0,a.kt)("p",null,"While Sift is 100% free and open source, if you feel like sponsoring, Sift is also available on ",(0,a.kt)("a",{parentName:"p",href:"https://csqrl.itch.io/sift"},"Itch.io"),"."),(0,a.kt)("h3",{id:"wally"},"Wally"),(0,a.kt)("p",null,"Wally is a CLI package manager (much like NPM, Yarn or Cargo) for Roblox by @UpliftGames. Find out more at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/upliftgames/wally"},"https://github.com/upliftgames/wally"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'# wally.toml\n\n[dependencies]\nSift = "csqrl/sift@=0.0.1"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ wally install\n")),(0,a.kt)("h3",{id:"typescript"},"TypeScript"),(0,a.kt)("p",null,"v0.0.1 of Sift includes TypeScript definitions. This means Sift is now compatible with roblox-ts. Refer to the Luau docs for API details."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ npm install @rbxts/sift\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://npmjs.com/package/@rbxts/sift"},"View on NPM ","\u2192")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// example.ts\nimport Sift from "@rbxts/sift"\n\nSift.Dictionary.merge({ a: 1, c: 2 }, { b: 3, c: Sift.None }) // { a: 1, b: 3 }\n')),(0,a.kt)("p",null,"Alternatively, you can use tree-shaking to access the modules directly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// example.ts\nimport { Dictionary, None } from "@rbxts/sift"\n\nDictionary.merge({ a: 1, c: 2 }, { b: 3, c: None }) // { a: 1, b: 3 }\n')),(0,a.kt)("h3",{id:"manual-installation"},"Manual Installation"),(0,a.kt)("p",null,"Grab a copy ",(0,a.kt)("a",{parentName:"p",href:"https://www.roblox.com/library/9486684823"},"from the Roblox Library")," or ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/csqrl/sift/releases"},"GitHub releases"),", and drop it into Studio. The Sift model file can be synced in using Rojo."))}f.isMDXComponent=!0}}]);